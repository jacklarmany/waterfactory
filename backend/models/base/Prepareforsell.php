<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;

/**
 * This is the base-model class for table "prepareforsell".
 *
 * @property integer $id
 * @property integer $waterid
 * @property integer $quality
 * @property string $sellprice
 * @property string $discount
 * @property integer $customerid
 * @property integer $factoryid
 * @property integer $userid
 *
 * @property \backend\models\Water $water
 * @property string $aliasModel
 */
abstract class Prepareforsell extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'prepareforsell';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['waterid', 'quality', 'sellprice', 'factoryid', 'userid'], 'required'],
            [['waterid', 'quality', 'customerid', 'factoryid', 'userid'], 'integer'],
            [['sellprice', 'discount'], 'number'],
            [['waterid'], 'unique'],
            [['waterid'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\Water::className(), 'targetAttribute' => ['waterid' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'waterid' => Yii::t('models', 'Waterid'),
            'quality' => Yii::t('models', 'Quality'),
            'sellprice' => Yii::t('models', 'Sellprice'),
            'discount' => Yii::t('models', 'Discount'),
            'customerid' => Yii::t('models', 'Customerid'),
            'factoryid' => Yii::t('models', 'Factoryid'),
            'userid' => Yii::t('models', 'Userid'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWater()
    {
        return $this->hasOne(\backend\models\Water::className(), ['id' => 'waterid']);
    }




}
